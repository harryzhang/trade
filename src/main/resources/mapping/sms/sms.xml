<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.redpack.sms.dao.ISysSmsDao">
	<resultMap type="sysSmsDo" id="sysSmsResultMap">
		<result property="id" column="id" />
		<result property="groupName" column="groupName" />
		<result property="status" column="status" />
		<result property="msgType" column="msgType" />
		<result property="msg" column="msg" />
		<result property="netWork" column="netWork" />
		<result property="updateTime" column="updateTime" />
		<result property="createTime" column="createTime" />
		<result property="userId" column="userId" />
	</resultMap>
	


	<select id="getById" parameterType="Long" resultMap="sysSmsResultMap">
		SELECT * 
		  FROM t_user_sms WHERE id = #{id}
	</select>
	
	
	<select id="selectSysSms" parameterType="Map" resultMap="sysSmsResultMap">
		SELECT * 
		  FROM t_user_sms
		  <trim prefix="WHERE" prefixOverrides="AND |OR "> 
			<if test="id != null">  
				AND id = #{id}
			</if>
			<if test="groupName != null">  
				AND groupName = #{groupName}
			</if>
			<if test="userId != null">  
				AND userId = #{userId}
			</if>
			<if test="status != null">  
				AND status = #{status}
			</if>
			<if test="msgType != null">  
				AND msgType = #{msgType}
			</if>
			<if test="msg != null">  
				AND msg = #{msg}
			</if>
			<if test="netWork != null">  
				AND netWork = #{netWork}
			</if>
         </trim> 
		order by id desc
	</select>
	
	<update id="updateSysSmsById" parameterType="sysSmsDo">
		UPDATE t_user_sms 
		<trim prefix="SET" suffixOverrides=","> 
		<if test="groupName != null">  
				groupName = #{groupName},
		</if>				
		<if test="msgType != null">  
				msgType = #{msgType},
		</if>				
		<if test="status != null">  
				status = #{status},
		</if>				
		<if test="msg != null">  
				msg = #{msg},
		</if>				
		<if test="netWork != null">  
				netWork = #{netWork},
		</if>				
		</trim>
		WHERE id = #{id} 
	</update>	
	
	<insert id="addSysSms" parameterType="sysSmsDo" keyProperty="id"
		useGeneratedKeys="true" >
		INSERT INTO t_user_sms( id,
        userId,
        msgType,
        msg,
        status,
        createTime,
        updateTime,
        groupName,
        netWork)        
		VALUES (
		 #{id},
        #{userId},
        #{msgType},
        #{msg},
        #{status},
        #{createTime},
        #{updateTime},
        #{groupName},
        #{netWork}
		)
	</insert>
	
	<delete id="deleteById" parameterType="Long" >
		DELETE FROM t_user_sms WHERE id = #{id}
	</delete>
	
</mapper>

